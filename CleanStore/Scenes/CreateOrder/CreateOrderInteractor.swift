//
//  CreateOrderInteractor.swift
//  CleanStore
//
//  Created by user on 26/04/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateOrderInteractorInput
{
    var shippingMethods: [String] { get }
    func formatExpirationDate(
        request: CreateOrder.FormatExpirationDate.Request
    )
}
protocol CreateOrderInteractorOutput
{
    func presentExpirationDate(
        response: CreateOrder.FormatExpirationDate.Response
    )
}
protocol CreateOrderBusinessLogic
{
    func doSomething(
        request: CreateOrder.Something.Request
    )
}

protocol CreateOrderDataStore
{
    //var name: String { get set }
}

class CreateOrderInteractor: CreateOrderInteractorInput,
                             CreateOrderBusinessLogic,
                             CreateOrderDataStore
{
    var shippingMethods = [
        "Standard Shipping",
        "Two-Day Shipping ",
        "One-Day Shipping "
    ]
    var presenter: CreateOrderPresentationLogic?
    var worker: CreateOrderWorker!
    var output: CreateOrderInteractorOutput!
    //var name: String = ""
    
    // MARK: Do something
    // MARK: Expiration date
    func formatExpirationDate(
        request: CreateOrder.FormatExpirationDate.Request
    ) {
        let response = CreateOrder.FormatExpirationDate.Response(
            date: request.date
        )
        output.presentExpirationDate(
            response: response
        )
    }
    func doSomething(
        request: CreateOrder.Something.Request
    ) {
        worker = CreateOrderWorker()
        worker?.doSomeWork()

        let response = CreateOrder.Something.Response()
        presenter?.presentSomething(
            response: response
        )
    }
}
