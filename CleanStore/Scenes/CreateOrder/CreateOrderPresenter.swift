//
//  CreateOrderPresenter.swift
//  CleanStore
//
//  Created by user on 26/04/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

//protocol CreateOrderPresentationLogic
//{
//    func presentSomething(response: CreateOrder.Something.Response)
//}
protocol CreateOrderPresenterInput
{
    func presentExpirationDate(
        response: CreateOrder.FormatExpirationDate.Response
    )
}

typealias CreateOrderPresenterOutput = CreateOrderViewControllerInput

class CreateOrderPresenter: CreateOrderPresenterInput
//                            , CreateOrderPresentationLogic
{
//MARK: - ATRIBUTES
    weak var output: CreateOrderPresenterOutput!
    let dateFormatter: DateFormatter = {
        let dateFormatter = DateFormatter()
        dateFormatter.dateStyle = .short
        dateFormatter.timeStyle = DateFormatter.Style.none
        
        return dateFormatter
    }()
    //    weak var viewController: CreateOrderDisplayLogic?
    
//MARK: - DO SOMETHING
    //MARK: expiration Date
    func presentExpirationDate(
        response: CreateOrder.FormatExpirationDate.Response
    ) {
        let date = dateFormatter.string(
            from: response.date
        )
        let viewModel = CreateOrder.FormatExpirationDate.ViewModel(
            date: date
        )
        output.displayExpirationDate(
            viewModel: viewModel
        )
    }
//    func presentSomething(response: CreateOrder.Something.Response)
//    {
//        let viewModel = CreateOrder.Something.ViewModel()
//        viewController?.displaySomething(viewModel: viewModel)
//    }
}
